---
source: crates/core/src/test.rs
expression: results
---
- __typename: Rewrite
  original:
    messages: []
    variables:
      - name: $new_files
        scopedName: 0_0_$new_files
        ranges: []
      - name: $program
        scopedName: 0_1_$program
        ranges: []
      - name: $filename
        scopedName: 0_2_$filename
        ranges: []
      - name: $absolute_filename
        scopedName: 0_3_$absolute_filename
        ranges: []
      - name: $body
        scopedName: 1_0_$body
        ranges:
          - start:
              line: 2
              column: 5
            end:
              line: 2
              column: 18
            startByte: 35
            endByte: 48
      - name: $args
        scopedName: 1_1_$args
        ranges:
          - start:
              line: 1
              column: 27
            end:
              line: 1
              column: 28
            startByte: 26
            endByte: 27
      - name: $match
        scopedName: 1_2_$match
        ranges:
          - start:
              line: 1
              column: 17
            end:
              line: 3
              column: 2
            startByte: 16
            endByte: 50
    sourceFile: test-file.tsx
    content: "var increment = function (i) {\n    return i + 1;\n};"
    byteRanges: ~
    ranges:
      - start:
          line: 1
          column: 17
        end:
          line: 3
          column: 2
        startByte: 16
        endByte: 50
  rewritten:
    messages: []
    variables: []
    sourceFile: test-file.tsx
    content: "var increment = (i) => {\n  return i + 1;\n};"
    byteRanges:
      - start: 16
        end: 42
    ranges: []
  reason: ~
  id: [UUID]
- __typename: DoneFile
  relativeFilePath: test-file.tsx
- __typename: AnalysisLog
  level: 441
  message: "Logging $body\n"
  position:
    line: 1
    column: 1
  file: test-file.tsx
  engineId: marzano
  range:
    start:
      line: 2
      column: 5
    end:
      line: 2
      column: 18
    startByte: 35
    endByte: 48
  syntaxTree: "(return_statement expressions: (binary_expression left: (identifier) operator: (plus) right: (number)))"
  source: return i + 1;
