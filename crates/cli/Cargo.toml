[package]
name = "marzano-cli"
version = "0.1.1"
edition = "2021"
authors = ["Grit Developers <support@grit.io>"]

[lints]
rust.unused_crate_dependencies = "warn"

[lib]
path = "src/lib.rs"

[dependencies]
anyhow = { version = "1.0.70" }
clap = { version = "4.1.13", features = ["derive"] }
indicatif = { version = "0.17.5" }
ignore = { version = "0.4.20" }
# Do *NOT* upgrade beyond 1.0.171 until https://github.com/serde-rs/serde/issues/2538 is fixed
serde = { version = "1.0.164", features = ["derive"] }
serde_json = { version = "1.0.96" }
uuid = { version = "1.1", features = ["v4", "serde"] }
tokio = { version = "1", features = ["full"] }
chrono = { version = "0.4.26", features = ["serde"] }
reqwest = { version = "0.11", features = ["json"] }
lazy_static = { version = "1.4.0" }
indicatif-log-bridge = { version = "0.2.1" }
colored = { version = "2.0.4" }
log = { version = "0.4.19" }
env_logger = { version = "0.10.0" }
git2 = { version = "0.17.2" }
regex = { version = "1.7.3" }
grit-util = { path = "../grit-util" }
marzano-core = { path = "../core", features = [
  "non_wasm",
], default-features = false }
marzano-gritmodule = { path = "../gritmodule" }
marzano-language = { path = "../language", features = ["finder"] }
marzano-lsp = { path = "../lsp" }
marzano-util = { path = "../util", features = ["finder"] }
marzano-auth = { path = "../auth" }
marzano_messenger = { path = "../marzano_messenger" }
cli_server = { git = "https://github.com/getgrit/cli_server.git", optional = true }
ai_builtins = { git = "https://github.com/getgrit/ai_builtins.git", optional = true }
grit_cache = { path = "../gritcache" }
tempfile = { version = "3.1" }
similar = { version = "2.2.1" }
dialoguer = { version = "0.10.4" }
console = { version = "0.15.7" }
rayon = { version = "1.8.0" }
dashmap = { version = "5.5.3" }
clap-markdown = { git = "https://github.com/getgrit/clap-markdown", rev = "4568de734d29257d51c0da15acde6ffd92126299", optional = true }
flate2 = { version = "1.0.17", features = [
  "rust_backend",
], default-features = false }

opentelemetry-otlp = { version = "0.14.0", optional = true, features = [
  "http-proto",
  "reqwest-client",
] }
opentelemetry = { version = "0.21.0", optional = true }
opentelemetry_sdk = { version = "0.21.1", optional = true, features = [
  "rt-tokio",
] }
tracing-opentelemetry = { version = "0.22.0", optional = true, default-features = false }

tracing = { version = "0.1.40", default-features = false, features = [] }

[target.'cfg(not(windows))'.dependencies]
openssl = { version = "0.10", features = ["vendored"] }

[dev-dependencies]
trim-margin = "0.1.0"
buildkite-test-collector = "0.1.1"
similar = "2.2.1"
reqwest = { version = "0.11.22", features = ["blocking", "json"] }
marzano-test-utils = { path = "../test_utils" }

[features]
default = [
  "external_functions",
  "updater",
  "workflows_v2",
  # "server",
  # "remote_redis",
  # "embeddings",
  # "grit_timing",
  # "grit_tracing",
]
workflows_v2 = []
bundled_workflows = []
remote_redis = []
remote_pubsub = []
server = [
  "workflows_v2",
  "external_functions",
  "updater",
  "remote_redis",
  "remote_pubsub",
  "ai_builtins",
  "dep:cli_server",
]
updater = []
grit_tracing = [
  "dep:opentelemetry-otlp",
  "dep:opentelemetry",
  "dep:opentelemetry_sdk",
  "dep:tracing-opentelemetry",
  "marzano-core/grit_tracing",
]
external_functions = ["marzano-core/external_functions"]
ai_querygen = ["dep:ai_builtins"]
ai_builtins = ["dep:ai_builtins"]
embeddings = ["marzano-core/embeddings", "ai_builtins/embeddings"]
docgen = ["dep:clap-markdown"]
grit_alpha = [
  "external_functions",
  "updater",
  "docgen",
  # "grit_timing",
  # "grit_tracing",
]
grit_beta = [
  "external_functions",
  "updater",
  "ai_builtins",
  # "grit_timing",
]
grit_timing = []
