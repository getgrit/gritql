name: main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-rust:
    name: Rust tests (marzano)
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [nscloud-ubuntu-22.04-amd64-8x32]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: "read"
      id-token: "write"
    env:
      ROOT_ANALYSIS_DIR: "${{ github.workspace }}/data"
      BUILD_OS: ${{ matrix.os }}
      os: ${{ matrix.os }}
      BUILD_PLATFORM: amd64
    steps:
      - name: clone code
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Install Protoc
        run: sudo apt-get install -y protobuf-compiler
      - name: install Rust
        uses: actions-rs/toolchain@v1
        with:
          # If you update this, also update build.mjs
          toolchain: nightly-2023-11-16
          override: true
      - name: install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
          unzip terraform_1.6.0_linux_amd64.zip
          chmod +x terraform
          sudo mv terraform /usr/local/bin/
      - name: install dependencies
        run: |
          cargo install buildkite-test-collector
      - name: setup node.js environment
        uses: actions/setup-node@v3
      - name: Install prettier
        run: |
          npm install -g prettier
          prettier --version
      - name: test
        run: |
          cargo test --workspace \
            --features test_ci \
            --exclude marzano-wasm-bindings \
            --exclude rustfsm \
            --exclude temporal-sdk-core-test-utils \
            --exclude temporal-client \
            --exclude temporal-sdk-core-protos \
            --exclude temporal-sdk \
            --exclude temporal-sdk-core \
            --exclude rustfsm_procmacro \
            --exclude rustfsm_codegen \
            --exclude google-cloud-metadata \
            --exclude google-cloud-auth \
            --exclude google-cloud-googleapis \
            --exclude google-cloud-gax \
            --exclude google-cloud-pubsub \
            -- -Z unstable-options
  test-rust-wasm:
    name: Rust wasm
    timeout-minutes: 15
    strategy:
      fail-fast: false
    runs-on:
      - ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: clone code
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: install wasm-pack
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: build wasm
        working-directory: ./crates/wasm-bindings
        run: |
          wasm-pack build --target web
  test-stdlib:
    name: Test the standard library
    timeout-minutes: 30
    strategy:
      fail-fast: false
    runs-on:
      - nscloud-ubuntu-22.04-amd64-4x16
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: clone code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-11-16
          override: true
      - name: build
        run: |
          cargo build --release
      - name: Checkout js repo
        uses: actions/checkout@v4
        with:
          repository: getgrit/stdlib
          path: stdlib
      - name: install-ruff
        run: |
          pip install ruff
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.0
        with:
          go-version: "^1.22.0"
      - name: test stdlib
        working-directory: ./stdlib
        run: |
          ../target/release/marzano patterns test --exclude ai --exclude grit_snake_case --exclude cargo_use_long_dependency
